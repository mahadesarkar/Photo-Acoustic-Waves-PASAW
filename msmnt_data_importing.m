%% Import data from text file
% Script for importing data from the following text file:
%
%    filename: D:\Mahade Sarkar\measurement\First_Measurement_Mahade\data_08_80mm.dat
%
% Auto-generated by MATLAB on 26-Mar-2022 23:35:37

% Set the file location
directory = 'D:\Mahade Sarkar\measurement\First_Measurement_Mahade';
% Check to make sure that folder actually exists.  Warn user if it doesn't.
if ~isfolder(directory)
  errorMessage = sprintf('Error: The following folder does not exist:\n%s', directory);
  uiwait(warndlg(errorMessage));
  return;
end

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 2);

% Specify range and delimiter
opts.DataLines = [27, Inf];
opts.Delimiter = "\t";

% Specify column names and types
opts.VariableNames = ["Depth", "HF"];
opts.VariableTypes = ["double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, ["Depth", "HF"], "TrimNonNumeric", true);
opts = setvaropts(opts, ["Depth", "HF"], "ThousandsSeparator", ",");

filePattern = fullfile(directory, '*.dat'); % Change to whatever pattern you need.
theFiles = dir(filePattern);

for k = 1 : length(theFiles)
  baseFileName = theFiles(k).name;
  fullFileName = fullfile(directory, baseFileName);
  fprintf(1, 'Now reading %s\n', fullFileName);
  % Import the data
  data_read = readtable(fullFileName, opts);
  %% Convert to output type
  dat = table2array(data_read);
  %
  % Append data
  if k == 1                                       % Normalized values of the measured data
     depthDataArray = dat(:,2)/max(dat(:,2));     % Separating depth columns from each measurement file
  %   time_data = dat(:,1);                        % Separating time series data which is same for all the measurement
  else
     depthDataArray = [depthDataArray, dat(:,2)/max(dat(:,2))];   % Must have same number of columns, making an array
      time_data = dat(:,1)*1e-3;                        % Separating time series data which is same for all the measurement
  end
end
signal_data = depthDataArray';
times = time_data';
save('depthDataArray','signal_data');
figure;
p = waterfall(times,1:10,signal_data);         % plotting the data in waterfall
p.EdgeColor = 'b';
xlabel('Time[Âµs]')
ylabel('Position[mm]')
zlabel('Amplitude')
%{
figure;
data_len = length(signal_data(1:end,1));
for j = 1:data_len
    subplot(data_len,1,j);
    plot(times,signal_data(j,:));
end
%}
%% Clear temporary variables
clear opts